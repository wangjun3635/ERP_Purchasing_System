<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.purchasing.mapper.ProductDao">

    <resultMap id="BaseResultMap" type="com.team.purchasing.bean.Product">
        <result column="id" property="id" />
        <result column="supplierId" property="supplierId" />
        <result column="brandId" property="brandId" />
        <result column="code" property="code" />
        <result column="barCode" property="barCode" />
        <result column="name" property="name" />
        <result column="genericName" property="genericName" />
        <result column="shortName" property="shortName" />
        <result column="specs" property="specs" />
        <result column="unit" property="unit" />
        <result column="unitPrice" property="unitPrice" />
        <result column="deliveryType" property="deliveryType" />
        <result column="firstLevel" property="productLevelFirst" />
        <result column="secondLevel" property="productLevelSecond" />
        <result column="thirdLevel" property="productLevelThird" />
        <result column="manufacturer" property="manufacturer" />
        <result column="components" property="components" />
        <result column="purpose" property="purpose" />
        <result column="taboo" property="taboo" />
        <result column="qualityStandard" property="qualityStandard" />
        <result column="packingSpecs" property="packingSpecs" />
        <result column="catalogs" property="catalogs" />
        <result column="registerNO" property="registerNO" />
        <result column="registerExpireDate" property="registerExpireDate" />
        <result column="licenseNO" property="licenseNO" />
        <result column="licenseExpireDate" property="licenseExpireDate" />
        <result column="transRequire" property="transRequire" />
        <result column="storageRequire" property="storageRequire" />
        <result column="minStock" property="minStock" />
        <result column="maxStock" property="maxStock" />
        <result column="remark" property="remark" />
        <result column="dataStatus" property="dataStatus" />
        <result column="auditStatus" property="auditStatus" />
        <result column="auditFlowCode" property="auditFlowCode" />
        <result column="auditNodeIndex" property="auditNodeIndex" />
        <result column="isEnabled" property="isEnabled" />
        <result column="isDeleted" property="isDeleted" />
        <result column="createTime" property="createTime" />
        <result column="createUserId" property="createUserId" />
        <result column="modifyTime" property="updateTime" />
        <result column="modifyUserId" property="updateUserId" />
    </resultMap>

    <sql id="baseQuery">
        <if test="productName != null">
            and tp.name like '%${productName}%'
        </if>
        <if test="barCode != null">
            and tp.barCode like '%${barCode}%'
        </if>
        <if test="unit != null">
            and tp.unit='${unit}'
        </if>
        <if test="unitPrice != null">
            and tp.unitPrice=${unitPrice}
        </if>
        <if test="deliveryType != null">
            and tp.deliveryType=${deliveryType}
        </if>
        <if test="productLevelFirst != null">
            and tp.firstlevel=${productLevelFirst}
        </if>
        <if test="productLevelSecond != null">
            and tp.secondlevel=${productLevelSecond}
        </if>
        <if test="productLevelThird != null">
            and tp.thirdlevel=${productLevelThird}
        </if>
        <if test="supplierName != null">
            and ts.name like '%${supplierName}%'
        </if>
        <if test="salesAreaType != null">
            and ts.salesAreaType=${salesAreaType}
        </if>
        <if test="salesProvince != null">
            and tssp.provinceid=${salesProvince}
        </if>
		<if test="brandName != null">
            and tb.name='${brandName}'
		</if>

    </sql>

    <select id="queryProductList" resultMap="BaseResultMap">
        select top (#{page.currentNum})
        o.id,
        o.supplierId,
        o.brandId,
        o.code,
        o.barCode,
        o.name,
        o.genericName,
        o.shortName,
        o.specs,
        o.unit,
        o.unitPrice,
        o.deliveryType,
        o.firstlevel,
        o.secondlevel,
        o.thirdlevel,
        o.manufacturer,
        o.components,
        o.purpose,
        o.taboo,
        o.qualityStandard,
        o.packingSpecs,
        o.catalogs,
        o.registerNO,
        o.registerExpireDate,
        o.licenseNO,
        o.licenseExpireDate,
        o.transRequire,
        o.storageRequire,
        o.minStock,
        o.maxStock,
        o.remark,
        o.dataStatus,
        o.auditStatus,
        o.auditFlowCode,
        o.auditNodeIndex,
        o.isEnabled,
        o.isDeleted,
        o.createTime,
        o.createUserId,
        o.modifyTime,
        o.modifyUserId
        from
        (select row_number() over(order by unitPrice desc ) as rownumber, * from
        ( select tp.* from tb_product tp
        left join tb_supplier ts on tp.supplierId = ts.id
        left join tb_supplier_sales_province tssp on ts.id =  tssp.supplierid
        left join tb_brand tb on tp.brandId = tb.id
          <where>
              <include refid="baseQuery" />
          </where> ) as oo  )
        as o where rownumber <![CDATA[ > ]]> #{page.rowNumber}
    </select>

    <select id="queryProductCount" resultType="java.lang.Integer" >
        select
        count(*)
        from (select tp.* from tb_product tp
        left join tb_supplier ts on tp.supplierId = ts.id
        left join tb_supplier_sales_province tssp on ts.id =  tssp.supplierid
        left join tb_brand tb on tp.brandId = tb.id
        <where>
            <include refid="baseQuery"/>
        </where>) t
    </select>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.purchasing.mapper.ProductBrandDao">

	<resultMap id="BaseResultMap" type="com.team.purchasing.bean.ProductBrand">
        <result column="id" property="id" />
        <result column="name" property="name" />
        <result column="chinesePhonetic" property="chinesePhonetic" />
        <result column="logo" property="logo" />
        <result column="brandIntroduction" property="brandIntroduction" />
        <result column="isValid" property="isValid" />
        <result column="createTime" property="createTime" />
        <result column="createUserId" property="createUserId" />
        <result column="updateTime" property="updateTime" />
        <result column="updateUserId" property="updateUserId" />
    </resultMap>

    <sql id="baseQuery">
        <if test="name != null">
            dbo.f_GetPy(name) like '${name}%'
        </if>
    </sql>

    <select id="queryProductBrandCount" resultType="java.lang.Integer">
        select count(*) from
        (select * from tb_brand
        <where>
          <include refid="baseQuery" />
        </where>) t
    </select>

    <select id="queryProductBrandList" resultMap="BaseResultMap">
    	select top (#{page.currentNum}) o.id,
    	o.name,
    	o.chinesePhonetic,
    	o.logo,
    	o.brandIntroduction,
    	o.isValid,
    	o.createTime,
    	o.createUserId,
    	o.modifyTime,
    	o.modifyUserId
    	from
        (select row_number() over(order by chinesePhonetic asc) as rownumber, * from
        ( select * from tb_brand
          <where>
              <include refid="baseQuery" />
          </where>
          <!--chinesePhonetic collate Chinese_PRC_CI_AS -->
         ) as oo  )
        as o where rownumber <![CDATA[ > ]]> #{page.rowNumber}
    </select>

    <select id="queryProductBrandNameList" resultType="java.lang.String">
        select name from tb_brand group by name
    </select>

</mapper>